----- test/cli/incremental-resolver/type-member.rb ---------------------
No errors! Great job.
----- test/cli/incremental-resolver/type-template.rb ---------------------
No errors! Great job.
----- test/cli/incremental-resolver/expect-failures/abstract_impl.rb ---------------------
test/cli/incremental-resolver/expect-failures/abstract_impl.rb:5: Malformed `sig`. Type not specified for argument `foo` https://srb.help/5003
     5 |  def foo(*foo)end
                   ^^^
    test/cli/incremental-resolver/expect-failures/abstract_impl.rb:4: Signature
     4 |  sig { overridable.void }
          ^^^^^^^^^^^^^^^^^^^^^^^^

test/cli/incremental-resolver/expect-failures/abstract_impl.rb:126: Implementation of abstract method `A#foo` must accept *`foo` https://srb.help/5035
     126 | def foo; end
           ^^^^^^^
    test/cli/incremental-resolver/expect-failures/abstract_impl.rb:123: Base method defined here
     123 |  def foo(*foo)end
            ^^^^^^^^^^^^^
Errors: 2
----- test/cli/incremental-resolver/expect-failures/constant_override.rb ---------------------
test/cli/incremental-resolver/expect-failures/constant_override.rb:3: Redefining constant `B` https://srb.help/4012
     3 |module B
     4 |  extend T::Sig
     5 |  sig { returns(T.all(B,T)) }
     6 |  def foo; T.unsafe(nil); end
     7 |end
    test/cli/incremental-resolver/expect-failures/constant_override.rb:2: Previous definition
     2 |B = e
        ^

test/cli/incremental-resolver/expect-failures/constant_override.rb:110: Redefining constant `B` https://srb.help/4012
     110 |B = e
          ^^^^^
    test/cli/incremental-resolver/expect-failures/constant_override.rb:19: Previous definition
    19 |
    20 |
    21 |
    22 |
    23 |
    24 |
    25 |
    26 |
    27 |

test/cli/incremental-resolver/expect-failures/constant_override.rb:111: Redefining constant `B` https://srb.help/4012
     111 |module B
     112 |  extend T::Sig
     113 |  sig { returns(T.all(B,T)) }
     114 |  def foo; T.unsafe(nil); end
     115 |end
    test/cli/incremental-resolver/expect-failures/constant_override.rb:110: Previous definition
     110 |B = e
          ^

test/cli/incremental-resolver/expect-failures/constant_override.rb:110: Method `e` does not exist on `T.class_of(<root>)` https://srb.help/7003
     110 |B = e
              ^
Errors: 4
----- test/cli/incremental-resolver/expect-failures/redefined_member.rb ---------------------
test/cli/incremental-resolver/expect-failures/redefined_member.rb:3: Redefining constant `V` https://srb.help/4012
     3 |  V=y
          ^^^
    test/cli/incremental-resolver/expect-failures/redefined_member.rb:2: Previous definition
     2 |  V=type_member
          ^^^^^^^^^^^^^

test/cli/incremental-resolver/expect-failures/redefined_member.rb:4: To use `sig`, this file must declare an explicit `# typed:` sigil (found: none). If you're not sure which one to use, start with `# typed: false` https://srb.help/5038
     4 |  sig{params(f:FullChild).void}
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

test/cli/incremental-resolver/expect-failures/redefined_member.rb:4: Malformed type declaration. Generic class without type arguments `FullChild` https://srb.help/5004
     4 |  sig{params(f:FullChild).void}
                       ^^^^^^^^^

test/cli/incremental-resolver/expect-failures/redefined_member.rb:97: To use `sig`, this file must declare an explicit `# typed:` sigil (found: none). If you're not sure which one to use, start with `# typed: false` https://srb.help/5038
    97 |  sig{params(f:FullChild).void}
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

test/cli/incremental-resolver/expect-failures/redefined_member.rb:97: Malformed type declaration. Generic class without type arguments `FullChild` https://srb.help/5004
    97 |  sig{params(f:FullChild).void}
                       ^^^^^^^^^
Errors: 5
